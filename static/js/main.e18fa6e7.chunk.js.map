{"version":3,"sources":["logo.svg","Joke.js","SideBar.js","JokeBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Joke","this","props","score","className","onClick","UpClick","aria-hidden","style","borderColor","getColor","DownClick","text","getEmoji","aria-label","Component","SideBar","handleClick","bind","getMoreJokes","src","JokeBoard","state","jokes","JSON","parse","window","localStorage","getItem","isLoading","incrementScore","dir","id","joke","find","jk","setState","st","map","setItem","stringify","loadedJokes","counter","console","log","axios","get","headers","Accept","then","res","some","data","getJoke","push","catch","err","length","jokesList","sort","a","b","key","defaultProps","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e18fa6e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport './joke.scss'\n\nclass Joke extends Component {\n  getColor() {\n    if (this.props.score >= 15) {\n      return '#4CAF50'\n    } else if (this.props.score >= 12) {\n      return '#8BC34A'\n    } else if (this.props.score >= 9) {\n      return '#CDDC39'\n    } else if (this.props.score >= 6) {\n      return '#FFEB3B'\n    } else if (this.props.score >= 3) {\n      return '#FFC107'\n    } else if (this.props.score >= 0) {\n      return '#FF9800'\n    } else {\n      return '#F44336'\n    }\n  }\n  getEmoji() {\n    if (this.props.score >= 15) {\n      return 'em em-rolling_on_the_floor_laughing'\n    } else if (this.props.score >= 12) {\n      return 'em em-laughing'\n    } else if (this.props.score >= 9) {\n      return 'em em-smiley'\n    } else if (this.props.score >= 6) {\n      return 'em em-slightly_smiling_face'\n    } else if (this.props.score >= 3) {\n      return 'em em-neutral_face'\n    } else if (this.props.score >= 0) {\n      return 'em em-confused'\n    } else {\n      return 'em em-angry'\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Joke\">\n        <div className=\"Joke-main-group\">\n          <div className=\"Joke-score\">\n            <i\n              onClick={this.props.UpClick}\n              className=\"fa fa-arrow-up\"\n              aria-hidden=\"true\"\n            ></i>\n            <p\n              style={{ borderColor: this.getColor() }}\n              className=\"Joke-score-num\"\n            >\n              {this.props.score}\n            </p>\n            <i\n              onClick={this.props.DownClick}\n              className=\"fa fa-arrow-down\"\n              aria-hidden=\"true\"\n            ></i>\n          </div>\n          <div className=\"Joke-text\">{this.props.text}</div>\n        </div>\n        <div className=\"emoji-container\">\n          <i\n            className={this.getEmoji()}\n            aria-label=\"ROLLING ON THE FLOOR LAUGHING\"\n          ></i>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Joke\n","import React, { Component } from 'react'\nimport './sidebar.scss'\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n  handleClick() {\n    this.props.getMoreJokes()\n  }\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <div className=\"Sidebar-app-name\">\n          <p>\n            Dad <span>Jokes</span>\n          </p>\n        </div>\n        <img\n          src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\n          className=\"em em-laughing\"\n          aria-label=\"ROLLING ON THE FLOOR LAUGHING\"\n        />\n        <button onClick={this.handleClick}>More Jokes</button>\n      </div>\n    )\n  }\n}\n\nexport default SideBar\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Joke from './Joke'\nimport './jokeboard.scss'\nimport SideBar from './SideBar'\nimport FlipMove from 'react-flip-move'\n\nclass JokeBoard extends Component {\n  static defaultProps = {\n    loadedJokes: [],\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      jokes: JSON.parse(window.localStorage.getItem('jokes') || '[]'),\n      isLoading: true,\n    }\n    this.incrementScore = this.incrementScore.bind(this)\n    this.getMoreJokes = this.getMoreJokes.bind(this)\n  }\n\n  incrementScore(dir, id) {\n    const joke = this.state.jokes.find((jk) => {\n      return jk.id === id\n    })\n    if (dir === -1 && joke.score <= -15 || joke.score >= 100 && dir === 1) {\n      return\n    }\n    this.setState(\n      (st) => ({\n        jokes: st.jokes.map((jk) =>\n          jk.id === id ? { ...jk, score: jk.score + dir } : jk\n        ),\n      }),\n      () => {\n        window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n      }\n    )\n  }\n\n  getJoke(loadedJokes, counter) {\n    console.log(counter)\n    return axios\n      .get('https://icanhazdadjoke.com', {\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n      .then((res) => {\n        if (loadedJokes.some((jk) => jk.id === res.data.id)) {\n          console.log('duplicate')\n          this.getJoke(loadedJokes, counter)\n        } else {\n          loadedJokes.push({ id: res.data.id, joke: res.data.joke, score: 0 })\n          if (counter === 0) {\n            console.log(loadedJokes)\n            this.setState(\n              (st) => ({\n                jokes: [...loadedJokes],\n                loadedJokes: [],\n                isLoading: false,\n              }),\n              () => {\n                window.localStorage.setItem(\n                  'jokes',\n                  JSON.stringify(this.state.jokes)\n                )\n              }\n            )\n          } else {\n            this.getJoke(loadedJokes, counter - 1)\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  getMoreJokes() {\n    if (this.state.isLoading) {\n      return\n    }\n    this.setState({\n      isLoading: true,\n    })\n    this.getJoke(this.state.jokes, 9)\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length === 0) {\n      this.getJoke(this.props.loadedJokes, 10)\n    } else {\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n  render() {\n    const sortedJokes = this.state.jokes.sort((a, b) => {\n      return b.score - a.score\n    })\n    const jokesList = sortedJokes.map((jk) => {\n      return (\n        <Joke\n          text={jk.joke}\n          score={jk.score}\n          UpClick={() => {\n            this.incrementScore(1, jk.id)\n          }}\n          DownClick={() => {\n            this.incrementScore(-1, jk.id)\n          }}\n          key={jk.id}\n          id={jk.id}\n        />\n      )\n    })\n    if (this.state.isLoading) {\n      return (\n        <div className=\"Jokelist\">\n          <SideBar getMoreJokes={this.getMoreJokes} />\n          <div className=\"Jokeboard\">\n            <div className=\"loading-screen\">\n              <i className=\"fa-5x far fa-laugh fa-spin\"></i>\n              <span>...fetching jokes</span>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"Jokelist\">\n        <SideBar\n          isLoading={this.state.isLoading}\n          getMoreJokes={this.getMoreJokes}\n        />\n        <div className=\"Jokeboard\">\n          <FlipMove>{jokesList}</FlipMove>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default JokeBoard\n","import React from 'react'\nimport logo from './logo.svg'\nimport './App.scss'\nimport JokeBoard from './JokeBoard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <JokeBoard />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}